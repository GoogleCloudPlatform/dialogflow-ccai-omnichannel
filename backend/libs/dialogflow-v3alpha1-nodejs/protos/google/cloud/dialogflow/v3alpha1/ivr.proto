// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.dialogflow.v3alpha1;

import "google/api/annotations.proto";
import "google/cloud/dialogflow/v3alpha1/gcs.proto";
import "google/protobuf/duration.proto";

option cc_enable_arenas = true;
option csharp_namespace = "Google.Cloud.Dialogflow.V3Alpha1";
option go_package = "google.golang.org/genproto/googleapis/cloud/dialogflow/v3alpha1;dialogflow";
option java_multiple_files = true;
option java_outer_classname = "InteractiveVoiceResponseProto";
option java_package = "com.google.cloud.dialogflow.v3alpha1";
option objc_class_prefix = "DF";

// Settings that control how certain IVR (interactive voice response) features
// operate. These settings can change over the course of a session.
message InteractiveVoiceResponseSettings {
  // Define behaviors for DTMF (dual tone multi frequency).
  message DtmfSettings {
    // If true, incoming audio is processed for DTMF (dual tone multi frequency)
    // events. For example, if the caller presses a button on their telephone
    // keypad and DTMF processing is enabled, Dialogflow will detect the
    // event (e.g. a "3" was pressed) in the incoming audio and pass the event
    // to the bot to drive business logic (e.g. when 3 is pressed, return the
    // account balance).
    bool enabled = 1;

    // If not empty, the transcribed DTMF digits will be set into the value of
    // the specified slot parameter.
    string parameter = 2 [deprecated = true];

    // Max length of DTMF digits.
    int32 max_digits = 3;

    // The digit that terminates a DTMF digit sequence.
    string finish_digit = 4;
  }

  // Define behaviors of speech to text detection.
  message SpeechSettings {
    // Sensitivity of the speech model that detects the end of speech.
    // Scale from 0 to 100.
    int32 endpointer_sensitivity = 1;

    // Timeout before detecting no speech.
    google.protobuf.Duration no_speech_timeout = 2;
  }

  // Define behaviors on logging.
  message LoggingSettings {
    // If true, logging is currently disabled. This setting overrides the agent-
    // level settings for Dialogflow History, Contact Center messages,
    // StackDriver logs, and speech logging. Usually, this is configured just
    // for specific pages in the agent (e.g. to temporarily disable logging for
    // a sensitive operation).
    bool disable_logging = 3;
  }

  // If present, incoming audio is exported by Dialogflow to the configured
  // Google Cloud Storage destination.
  GcsDestination audio_export_gcs_destination = 2;

  // If true, logging is currently disabled. This setting overrides the agent-
  // level settings for Dialogflow History, Contact Center messages, StackDriver
  // logs, and speech logging. Usually, this is configured just for specific
  // pages in the agent (e.g. to temporarily disable logging for a sensitive
  // operation).
  bool disable_logging = 3 [deprecated = true];

  // Settings for DTMF.
  DtmfSettings dtmf_settings = 4;

  // Settings for speech to text detection.
  SpeechSettings speech_settings = 5;

  // Settings for logging.
  LoggingSettings logging_settings = 6;
}
